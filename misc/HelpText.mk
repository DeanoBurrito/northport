help-text:
	@printf "\e[1;39mUsage: \e[0;39mmake $(C_YELLOW)<target>$(C_RST), where $(C_YELLOW)<target>$(C_RST) is one of the following:\n"
	@printf "  $(C_YELLOW)all$(C_RST)\t\t Compiles everything, builds a bootable iso.\n"
	@printf "  $(C_YELLOW)options$(C_RST)\t Displays current config info, including compiler and linker flags.\n"
	@printf "  $(C_YELLOW)clean$(C_RST)\t\t Removes all temporary build files.\n"
	@printf "  $(C_YELLOW)clean-cache$(C_RST)\t Removes all downloaded vendor files (bootloaders etc).\n"
	@printf "  $(C_YELLOW)run$(C_RST)\t\t Builds everything and launches the kernel in qemu.\n"
	@printf "  $(C_YELLOW)run-noaccel$(C_RST)\t Same as $(C_YELLOW)all$(C_RST), but without hardware acceleration.\n"
	@printf "  $(C_YELLOW)debug$(C_RST)\t\t Builds everything, launches in qemu and waits for a GDB connection.\n"
	@printf "  $(C_YELLOW)attach$(C_RST)\t Launches gdb and connects to a qemu gdb-server, with kernel symbols loaded.\n"
	@printf "User-facing settings can be found in \e[4;39mConfig.mk\e[0;39m.\n"
	@printf "\n\e[1;39mRequirements:\e[0;39m\n"
	@printf "Building requires standard core utils, and a cross compiler. Where possible both GCC and clang\n"
	@printf "are supported, but this is not possible for all target architectures.\n"
	@printf "To use the 'run' and 'debug' targets qemu is required, gdb is required for the 'attach' target.\n"
	@printf "\n\e[1;39mOnline Mirrors:\e[0;39m\n"
	@printf "  Github: https://github.com/deanoburrito/northport\n"
	@printf "  Codeberg: https://codeberg.org/r4/northport\n"

